<script>
    // Gerenciamento de dados no localStorage
    function saveDataToStorage(key, data) {
        localStorage.setItem(key, JSON.stringify(data));
    }

    function getDataFromStorage(key) {
        const data = localStorage.getItem(key);
        return data ? JSON.parse(data) : null;
    }

    // Inicializar variáveis
    let users = getDataFromStorage('users') || {};
    let links = getDataFromStorage('links') || [];
    let currentUser = getDataFromStorage('currentUser') || null; // Verifica se há um usuário logado

    function registerUser() {
        const username = document.getElementById('registerUsername').value;
        const password = document.getElementById('registerPassword').value;

        if (username && password) {
            if (users[username]) {
                alert('Usuário já registrado!');
            } else {
                users[username] = { password, coins: 50 };
                saveDataToStorage('users', users);
                alert('Usuário registrado com sucesso!');
                showLoginPage();
            }
        } else {
            alert('Por favor, preencha todos os campos.');
        }
    }

    function loginUser() {
        const username = document.getElementById('loginUsername').value;
        const password = document.getElementById('loginPassword').value;

        if (username && password) {
            if (users[username] && users[username].password === password) {
                currentUser = username;
                saveDataToStorage('currentUser', currentUser); // Salva o usuário logado no localStorage
                alert('Login bem-sucedido!');
                showMainPage();
            } else {
                alert('Usuário ou senha incorretos.');
            }
        } else {
            alert('Por favor, preencha todos os campos.');
        }
    }

    function showLoginPage() {
        document.getElementById('registerPage').style.display = 'none';
        document.getElementById('loginPage').style.display = 'block';
        document.getElementById('mainPage').style.display = 'none';
        currentUser = null;
        saveDataToStorage('currentUser', null); // Remove o usuário logado
    }

    function showMainPage() {
        document.getElementById('registerPage').style.display = 'none';
        document.getElementById('loginPage').style.display = 'none';
        document.getElementById('mainPage').style.display = 'block';
        document.getElementById('currentUser').textContent = currentUser;
        updateCoinBalance();
    }

    function updateCoinBalance() {
        document.getElementById('coinBalance').textContent = users[currentUser].coins;
    }

    function addTikTokLink() {
        if (users[currentUser].coins >= 50) {
            const link = prompt('Insira o link do vídeo do TikTok:');
            if (link) {
                links.push({ link, allowedUsers: Object.keys(users).filter(user => user !== currentUser) });
                saveDataToStorage('links', links);
                users[currentUser].coins -= 50;
                saveDataToStorage('users', users);
                alert('Link adicionado com sucesso!');
                updateCoinBalance();
            } else {
                alert('Nenhum link foi adicionado.');
            }
        } else {
            alert('Você precisa de pelo menos 50 moedas para adicionar um vídeo.');
        }
    }

    function watchTikTokVideo() {
        const availableLinks = links.filter(link => link.allowedUsers.includes(currentUser));

        if (availableLinks.length > 0) {
            const randomLinkIndex = Math.floor(Math.random() * availableLinks.length);
            const randomLink = availableLinks[randomLinkIndex];

            // Abrir o link em uma nova aba
            window.open(randomLink.link, '_blank');

            // Remover o usuário atual da lista de usuários permitidos
            randomLink.allowedUsers = randomLink.allowedUsers.filter(user => user !== currentUser);

            // Atualizar os links no armazenamento
            saveDataToStorage('links', links);

            // Atualizar o saldo do usuário
            users[currentUser].coins += 10;
            saveDataToStorage('users', users);
            alert('Você ganhou 10 moedas por assistir ao vídeo!');
            updateCoinBalance();

            // Remover o link da lista principal se ninguém mais puder assisti-lo
            links = links.filter(link => link.allowedUsers.length > 0);
            saveDataToStorage('links', links);
        } else {
            alert('Nenhum link disponível para você assistir.');
        }
    }

    // Verifica se há um usuário logado ao carregar a página
    window.onload = function () {
        if (currentUser) {
            showMainPage();
        } else {
            showLoginPage();
        }
    };
</script>
